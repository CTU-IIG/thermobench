# This file contain the common machine-independent options for the suite. #
###########################################################################

# Prefix of the output files produced by each benchmark

# if this fails, replace it with a regular name!
Result_Prefix := $(shell hostname)-$(shell uname -m)

#### Blasbench Config

# The number of tests which are averaged together for each result
# Remember the cache is not flushed between iterations, only between test sizes
BB_Iterations = 1

# The number of times each test is run
BB_RepeatCount = 1

# Log base 2 of the maximum problem size tested in bytes
BB_Memsize = 29

# The number of test sizes measured between powers of two
BB_Resolution = 2

# This variable sets the AXPY mem size, keep it small to have the plots look nice.
BB_AXPY_Memsize = 20

# This variable sets the name of the BLAS implementation
BB_Prefix = Reference
#BB_Prefix = Intel MKL
#BB_Prefix = IBM ESSL

#### Cachebench Config

# Datatype used for each memory reference. 
# Legal values are DOUBLE, CHAR, INT, FLOAT
CB_Datatype = DOUBLE

# The number of seconds each test runs.
CB_SecondsPerIteration = 5

# The number of times each test is run.
CB_RepeatCount = 1

# Log base 2 of the maximum problem size tested in bytes
CB_Memsize = 29

# The number of test sizes measured between powers of two
CB_Resolution = 2

#### MPbench stuff

# The number of tests which are averaged together for each result
# Remember the cache is not flushed between iterations, only repeated
# tests 
MP_Iterations = 5000

# The number of tasks used by the MPI collective routines
MP_Tasks = 2

# The number of times each test is run.
MP_RepeatCount = 1

# Log base 2 of the maximum message size tested in bytes
MP_Memsize = 24

# The number of test sizes measured between powers of two
MP_Resolution = 2 

# The file containing the native MPI hostfile if necessary/desired
# For example, MPICH users might use
# 
# Line for VMI2/MVICH
# MP_Hostfile = -hf $(HOME)/machines
# Line for MPICH/MPICH2/MVAPICH
# MP_Hostfile = -machinefile $(HOME)/machines
