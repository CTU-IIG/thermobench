File: filterbank.c
Original provenience: unknown 
Source: unknown 

2016-04-20:
- Add static global variable filterbank_return_value that depends on the
  computation inside of filterbank_main, return this value in filterbank_return.

2016-01-06:
- Added original name to generic TACLeBench header.
- Applied TACLeBench formatting rules via
  astyle --options=doc/example/astylerc.txt

2015-12-08:
- Added generic TACLeBench header.
- Introduced comments to split file in sections for forward declarations,
  global variables, initialization-related and return-value-related functions,
  core benchmark functions, and main routine.
- Renamed function begin to filterbank_main.
- Renamed function FBCore to filterbank_core.
- Renamed global variable numiters to filterbank_numiters and made it static.
- Added function filterbank_init that handles the initialization of filterbank_numiters.
- Added function filterbank_return that handles the original return value of main.
- Added new function main that first calls filterbank_init, then filterbank_main and
  finally returns the return value of filterbank_return.
- Added forward declarations for all these functions.
- Changed all //-style comments to /* */-style comments
- Applied code formatting according to the following rules:
  - Lines shall not be wider than 80 characters; whenever possible, appropriate
    line breaks shall be inserted to keep lines below 80 characters
  - Indentation is done using whitespaces only, no tabs. Code is indented by
    two whitespaces
  - Two empty lines are put between any two functions
  - In non-empty lists or index expressions, opening '(' and '[' are followed by
    one whitespace, closing ')' and ']' are preceded by one whitespace
  - In comma- or colon-separated argument lists, one whitespace is put after
    each comma/colon
  - For pointer types, one whitespace is put before the '*'
  - Operators within expressions shall be preceded and followed by one
    whitespace
  - Code of then- and else-parts of if-then-else statements shall be put in
    separate lines, not in the same lines as the if-condition or the keyword
    "else"
  - Opening braces '{' denoting the beginning of code for some if-else or loop
    body shall be put at the end of the same line where the keywords "if",
    "else", "for", "while" etc. occur
  - Function arguments are specified in ANSI style, i.e.,
      float my_sqrtf( float val )
    and NOT in Kernighan&Ritchie style like, e.g.,
      float my_sqrtf( val )
        float val;
- Tested conformance to C90 via
  clang -fsyntax-only -Weverything -Wno-unknown-pragmas -pedantic -std=c90
