File: prime.c
Original provenience: MÃ¤lardalen benchmark suite, 
ww.mrtc.mdh.se/projects/wcet/wcet_bench/prime/prime.c


2015-12-21:
- Renamed each function FUNC to prime_FUNC
- Added functions prime_init, prime_return and main
- Added a global variable 'int prime_result' to introduce a 
  non-optimizable return value
- Added forward declarations of all functions before the declarations of global
  variables
- Replaced typedefs bool and uint.
- Re-ordered functions to fit template-order
- Applied code formatting according to the following rules
  (incomplete, to be discussed; I basically used astyle with the attached
   options file):
  - Lines shall not be wider than 80 characters; whenever possible, appropriate
    line breaks shall be inserted to keep lines below 80 characters
  - Indentation is done using whitespaces only, no tabs. Code is indented by
    two whitespaces
  - Two empty lines are put between any two functions
  - In non-empty lists or index expressions, opening '(' and '[' are followed by
    one whitespace, closing ')' and ']' are preceded by one whitespace
  - In comma- or colon-separated argument lists, one whitespace is put after
    each comma/colon
  - Names of functions and global variables all start with a benchmark-specific
    prefix (here: st_) followed by lowercase letter (e.g., st_square)
  - For pointer types, one whitespace is put before the '*'
  - Operators within expressions shall be preceded and followed by one
    whitespace
  - Code of then- and else-parts of if-then-else statements shall be put in
    separate lines, not in the same lines as the if-condition or the keyword
    "else"
  - Opening braces '{' denoting the beginning of code for some if-else or loop
    body shall be put at the end of the same line where the keywords "if",
    "else", "for", "while" etc. occur
- Added general TACLeBench header to beginning of source code