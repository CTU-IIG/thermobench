File: crc.c
Original provenience: unknown 
Source: HPEC Challenge Benchmark Suite

2016-01-03
- Removed original header comment, replaced by TACLeBench header.
- Added prefix "crc_"/"CRC_" to all global symbols
- Removed definition/use of user-defined type uchar (unsigned char)
- Replaced initialization code by TACLeBench-compliant initialization code.

2016-02-02
- Added a new main() function that calls crc_init(), then crc_main()
- Annotated crc_main() as the entry point of the analysis
- Applied code formatting according to the following rules
  - Lines shall not be wider than 80 characters; whenever possible, appropriate
    line breaks shall be inserted to keep lines below 80 characters
  - Indentation is done using whitespaces only, no tabs. Code is indented by
    two whitespaces
  - Two empty lines are put between any two functions
  - In non-empty lists or index expressions, opening '(' and '[' are followed by
    one whitespace, closing ')' and ']' are preceded by one whitespace
  - In comma- or colon-separated argument lists, one whitespace is put after
    each comma/colon
  - Names of functions and global variables all start with a benchmark-specific 
  prefix (here: statemate_) followed by lowercase letter
  - For pointer types, one whitespace is put before the '*'
  - Operators within expressions shall be preceded and followed by one
    whitespace
  - Code of then- and else-parts of if-then-else statements shall be put in
    separate lines, not in the same lines as the if-condition or the keyword
    "else"
  - Opening braces '{' denoting the beginning of code for some if-else or loop
    body shall be put at the end of the same line where the keywords "if",
    "else", "for", "while" etc. occur


